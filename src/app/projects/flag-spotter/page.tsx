"use client";

import { useState, useEffect, useCallback, useMemo } from "react";
import Link from "next/link";

// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è FlagSpotter
interface Person {
  id: string;
  name: string;
  age: number;
  location: string;
  bio?: string;
  photos: string[];
  school?: string;
  occupation?: string;
  addedBy: string;
  addedAt: Date;
  verified: boolean;
  socialMedia?: {
    instagram?: string;
    tiktok?: string;
    snapchat?: string;
  };
}

interface Flag {
  id: string;
  personId: string;
  type: 'red' | 'green';
  category: string;
  description: string;
  submittedBy: string;
  submittedAt: Date;
  votes: number;
  verified: boolean;
  tags: string[];
}

interface Comment {
  id: string;
  personId: string;
  content: string;
  rating: 1 | 2 | 3 | 4 | 5;
  category: 'dating' | 'friendship' | 'work' | 'general';
  submittedBy: string;
  submittedAt: Date;
  likes: number;
  anonymous: boolean;
  verified: boolean;
}

interface Vote {
  id: string;
  flagId: string;
  userId: string;
  type: 'upvote' | 'downvote';
  submittedAt: Date;
}

// –ü—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ñ–ª–∞–≥–æ–≤
const flagCategories = {
  red: [
    "–ù–µ—É–≤–∞–∂–µ–Ω–∏–µ –∫ –≥—Ä–∞–Ω–∏—Ü–∞–º",
    "–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ",
    "–õ–æ–∂—å –∏ –æ–±–º–∞–Ω",
    "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã",
    "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏",
    "–ò–∑–º–µ–Ω—ã",
    "–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—â–µ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ",
    "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –Ω–∞—Å–∏–ª–∏–µ",
    "–ë–µ–∑–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å",
    "–≠–≥–æ–∏–∑–º"
  ],
  green: [
    "–£–≤–∞–∂–µ–Ω–∏–µ –∫ –≥—Ä–∞–Ω–∏—Ü–∞–º",
    "–î–æ–±—Ä–æ—Ç–∞ –∏ —ç–º–ø–∞—Ç–∏—è",
    "–ß–µ—Å—Ç–Ω–æ—Å—Ç—å",
    "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å",
    "–ó–¥–æ—Ä–æ–≤—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏",
    "–í–µ—Ä–Ω–æ—Å—Ç—å",
    "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π",
    "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∑—Ä–µ–ª–æ—Å—Ç—å",
    "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å",
    "–©–µ–¥—Ä–æ—Å—Ç—å"
  ]
};

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
const samplePeople: Person[] = [
  {
    id: "person-1",
    name: "–ê–ª–µ–∫—Å –ö.",
    age: 24,
    location: "–ú–æ—Å–∫–≤–∞",
    bio: "–°—Ç—É–¥–µ–Ω—Ç –ú–ì–£, —É–≤–ª–µ–∫–∞–µ—Ç—Å—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π",
    photos: ["üì∏"],
    school: "–ú–ì–£",
    occupation: "–°—Ç—É–¥–µ–Ω—Ç",
    addedBy: "anonymous",
    addedAt: new Date('2024-01-10'),
    verified: false,
    socialMedia: {
      instagram: "@alex_k_photo"
    }
  },
  {
    id: "person-2",
    name: "–ú–∞—Ä–∏—è –°.",
    age: 22,
    location: "–°–ü–±",
    bio: "–†–∞–±–æ—Ç–∞—é –≤ IT, –ª—é–±–ª—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è",
    photos: ["üíª"],
    occupation: "Frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
    addedBy: "anonymous",
    addedAt: new Date('2024-01-08'),
    verified: true,
    socialMedia: {
      instagram: "@maria_travels",
      tiktok: "@maria_dev"
    }
  },
  {
    id: "person-3",
    name: "–î–º–∏—Ç—Ä–∏–π –í.",
    age: 26,
    location: "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥",
    bio: "–§–∏—Ç–Ω–µ—Å —Ç—Ä–µ–Ω–µ—Ä, –∑–∞–Ω–∏–º–∞—é—Å—å —Å–ø–æ—Ä—Ç–æ–º",
    photos: ["üí™"],
    occupation: "–§–∏—Ç–Ω–µ—Å —Ç—Ä–µ–Ω–µ—Ä",
    addedBy: "anonymous",
    addedAt: new Date('2024-01-05'),
    verified: false
  }
];

const sampleFlags: Flag[] = [
  {
    id: "flag-1",
    personId: "person-1",
    type: "green",
    category: "–£–≤–∞–∂–µ–Ω–∏–µ –∫ –≥—Ä–∞–Ω–∏—Ü–∞–º",
    description: "–í—Å–µ–≥–¥–∞ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å–æ–≥–ª–∞—Å–∏–µ –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞—Ç—å",
    submittedBy: "anonymous-1",
    submittedAt: new Date('2024-01-12'),
    votes: 12,
    verified: true,
    tags: ["—É–≤–∞–∂–µ–Ω–∏–µ", "—Å–æ–≥–ª–∞—Å–∏–µ"]
  },
  {
    id: "flag-2",
    personId: "person-1",
    type: "red",
    category: "–ë–µ–∑–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å",
    description: "–ß–∞—Å—Ç–æ –æ–ø–∞–∑–¥—ã–≤–∞–µ—Ç –Ω–∞ –≤—Å—Ç—Ä–µ—á–∏ –∏ –Ω–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ—Ç",
    submittedBy: "anonymous-2",
    submittedAt: new Date('2024-01-11'),
    votes: 8,
    verified: false,
    tags: ["–æ–ø–æ–∑–¥–∞–Ω–∏—è", "–±–µ–∑–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å"]
  },
  {
    id: "flag-3",
    personId: "person-2",
    type: "green",
    category: "–î–æ–±—Ä–æ—Ç–∞ –∏ —ç–º–ø–∞—Ç–∏—è",
    description: "–û—á–µ–Ω—å –æ—Ç–∑—ã–≤—á–∏–≤–∞—è, –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å",
    submittedBy: "anonymous-3",
    submittedAt: new Date('2024-01-09'),
    votes: 15,
    verified: true,
    tags: ["–¥–æ–±—Ä–æ—Ç–∞", "–ø–æ–º–æ—â—å", "—ç–º–ø–∞—Ç–∏—è"]
  },
  {
    id: "flag-4",
    personId: "person-3",
    type: "green",
    category: "–ó–¥–æ—Ä–æ–≤—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏",
    description: "–ú–æ—Ç–∏–≤–∏—Ä—É–µ—Ç –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º, —Å–∞–º —Ö–æ—Ä–æ—à–∏–π –ø—Ä–∏–º–µ—Ä",
    submittedBy: "anonymous-4",
    submittedAt: new Date('2024-01-06'),
    votes: 7,
    verified: true,
    tags: ["—Å–ø–æ—Ä—Ç", "–º–æ—Ç–∏–≤–∞—Ü–∏—è", "–∑–¥–æ—Ä–æ–≤—å–µ"]
  }
];

const sampleComments: Comment[] = [
  {
    id: "comment-1",
    personId: "person-1",
    content: "–û–±—â–∞–ª—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Å—è—Ü–µ–≤. –í —Ü–µ–ª–æ–º —Ö–æ—Ä–æ—à–∏–π —á–µ–ª–æ–≤–µ–∫, –Ω–æ –∏–Ω–æ–≥–¥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–º –∫ –¥–µ—Ç–∞–ª—è–º.",
    rating: 4,
    category: "dating",
    submittedBy: "anonymous-1",
    submittedAt: new Date('2024-01-12'),
    likes: 5,
    anonymous: true,
    verified: false
  },
  {
    id: "comment-2",
    personId: "person-2",
    content: "–†–∞–±–æ—Ç–∞–ª–∏ –≤–º–µ—Å—Ç–µ –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º. –û—á–µ–Ω—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∏ –Ω–∞–¥–µ–∂–Ω–∞—è. –†–µ–∫–æ–º–µ–Ω–¥—É—é!",
    rating: 5,
    category: "work",
    submittedBy: "anonymous-3",
    submittedAt: new Date('2024-01-09'),
    likes: 12,
    anonymous: true,
    verified: true
  },
  {
    id: "comment-3",
    personId: "person-3",
    content: "–û—Ç–ª–∏—á–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä! –ü–æ–º–æ–≥ –¥–æ—Å—Ç–∏—á—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π –≤ —Ñ–∏—Ç–Ω–µ—Å–µ. –¢–µ—Ä–ø–µ–ª–∏–≤—ã–π –∏ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π.",
    rating: 5,
    category: "work",
    submittedBy: "anonymous-4",
    submittedAt: new Date('2024-01-07'),
    likes: 8,
    anonymous: true,
    verified: true
  }
];

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç FlagSpotter
export default function FlagSpotter() {
  const [currentView, setCurrentView] = useState<'feed' | 'search' | 'add-person' | 'profile' | 'guidelines'>('feed');
  const [selectedPerson, setSelectedPerson] = useState<Person | null>(null);
  const [people, setPeople] = useState<Person[]>(samplePeople);
  const [flags, setFlags] = useState<Flag[]>(sampleFlags);
  const [comments, setComments] = useState<Comment[]>(sampleComments);
  const [votes, setVotes] = useState<Vote[]>([]);
  const [searchQuery, setSearchQuery] = useState('');
  const [filterLocation, setFilterLocation] = useState('all');
  const [filterAge, setFilterAge] = useState('all');
  const [sortBy, setSortBy] = useState<'recent' | 'most_flags' | 'verified'>('recent');

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
  const [showAddFlag, setShowAddFlag] = useState(false);
  const [showAddComment, setShowAddComment] = useState(false);
  const [flagType, setFlagType] = useState<'red' | 'green'>('red');

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
  useEffect(() => {
    const savedPeople = localStorage.getItem('flagspotter-people');
    if (savedPeople) {
      setPeople(JSON.parse(savedPeople).map((p: any) => ({
        ...p,
        addedAt: new Date(p.addedAt)
      })));
    }

    const savedFlags = localStorage.getItem('flagspotter-flags');
    if (savedFlags) {
      setFlags(JSON.parse(savedFlags).map((f: any) => ({
        ...f,
        submittedAt: new Date(f.submittedAt)
      })));
    }

    const savedComments = localStorage.getItem('flagspotter-comments');
    if (savedComments) {
      setComments(JSON.parse(savedComments).map((c: any) => ({
        ...c,
        submittedAt: new Date(c.submittedAt)
      })));
    }

    const savedVotes = localStorage.getItem('flagspotter-votes');
    if (savedVotes) {
      setVotes(JSON.parse(savedVotes).map((v: any) => ({
        ...v,
        submittedAt: new Date(v.submittedAt)
      })));
    }
  }, []);

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage
  useEffect(() => {
    localStorage.setItem('flagspotter-people', JSON.stringify(people));
  }, [people]);

  useEffect(() => {
    localStorage.setItem('flagspotter-flags', JSON.stringify(flags));
  }, [flags]);

  useEffect(() => {
    localStorage.setItem('flagspotter-comments', JSON.stringify(comments));
  }, [comments]);

  useEffect(() => {
    localStorage.setItem('flagspotter-votes', JSON.stringify(votes));
  }, [votes]);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ª—é–¥–µ–π
  const filteredPeople = useMemo(() => {
    let filtered = people.filter(person => {
      const matchesSearch = person.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
                          person.location.toLowerCase().includes(searchQuery.toLowerCase()) ||
                          (person.bio && person.bio.toLowerCase().includes(searchQuery.toLowerCase()));
      
      const matchesLocation = filterLocation === 'all' || person.location === filterLocation;
      
      const matchesAge = filterAge === 'all' || 
                        (filterAge === '18-22' && person.age >= 18 && person.age <= 22) ||
                        (filterAge === '23-27' && person.age >= 23 && person.age <= 27) ||
                        (filterAge === '28-35' && person.age >= 28 && person.age <= 35) ||
                        (filterAge === '35+' && person.age > 35);

      return matchesSearch && matchesLocation && matchesAge;
    });

    return filtered.sort((a, b) => {
      switch (sortBy) {
        case 'recent':
          return b.addedAt.getTime() - a.addedAt.getTime();
        case 'most_flags':
          const aFlags = flags.filter(f => f.personId === a.id).length;
          const bFlags = flags.filter(f => f.personId === b.id).length;
          return bFlags - aFlags;
        case 'verified':
          if (a.verified && !b.verified) return -1;
          if (!a.verified && b.verified) return 1;
          return 0;
        default:
          return 0;
      }
    });
  }, [people, flags, searchQuery, filterLocation, filterAge, sortBy]);

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ª–æ–∫–∞—Ü–∏–π
  const locations = useMemo(() => {
    const allLocations = people.map(p => p.location);
    return Array.from(new Set(allLocations));
  }, [people]);

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞
  const addPerson = useCallback((personData: Omit<Person, 'id' | 'addedBy' | 'addedAt' | 'verified'>) => {
    const newPerson: Person = {
      ...personData,
      id: `person-${Date.now()}`,
      addedBy: 'current-user',
      addedAt: new Date(),
      verified: false
    };

    setPeople(prev => [newPerson, ...prev]);
  }, []);

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ñ–ª–∞–≥–∞
  const addFlag = useCallback((personId: string, flagData: Omit<Flag, 'id' | 'personId' | 'submittedBy' | 'submittedAt' | 'votes' | 'verified'>) => {
    const newFlag: Flag = {
      ...flagData,
      id: `flag-${Date.now()}`,
      personId,
      submittedBy: 'current-user',
      submittedAt: new Date(),
      votes: 0,
      verified: false
    };

    setFlags(prev => [newFlag, ...prev]);
  }, []);

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
  const addComment = useCallback((personId: string, commentData: Omit<Comment, 'id' | 'personId' | 'submittedBy' | 'submittedAt' | 'likes' | 'verified'>) => {
    const newComment: Comment = {
      ...commentData,
      id: `comment-${Date.now()}`,
      personId,
      submittedBy: 'current-user',
      submittedAt: new Date(),
      likes: 0,
      verified: false
    };

    setComments(prev => [newComment, ...prev]);
  }, []);

  // –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ —Ñ–ª–∞–≥
  const voteOnFlag = useCallback((flagId: string, voteType: 'upvote' | 'downvote') => {
    const existingVote = votes.find(v => v.flagId === flagId && v.userId === 'current-user');
    
    if (existingVote) {
      // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≥–æ–ª–æ—Å –µ—Å–ª–∏ –æ–Ω —Ç–∞–∫–æ–π –∂–µ, –∏–ª–∏ –º–µ–Ω—è–µ–º —Ç–∏–ø
      if (existingVote.type === voteType) {
        setVotes(prev => prev.filter(v => v.id !== existingVote.id));
        setFlags(prev => prev.map(f => 
          f.id === flagId 
            ? { ...f, votes: f.votes + (voteType === 'upvote' ? -1 : 1) }
            : f
        ));
      } else {
        setVotes(prev => prev.map(v => 
          v.id === existingVote.id ? { ...v, type: voteType } : v
        ));
        setFlags(prev => prev.map(f => 
          f.id === flagId 
            ? { ...f, votes: f.votes + (voteType === 'upvote' ? 2 : -2) }
            : f
        ));
      }
    } else {
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –≥–æ–ª–æ—Å
      const newVote: Vote = {
        id: `vote-${Date.now()}`,
        flagId,
        userId: 'current-user',
        type: voteType,
        submittedAt: new Date()
      };

      setVotes(prev => [...prev, newVote]);
      setFlags(prev => prev.map(f => 
        f.id === flagId 
          ? { ...f, votes: f.votes + (voteType === 'upvote' ? 1 : -1) }
          : f
      ));
    }
  }, [votes]);

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–ª–∞–≥–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞
  const getPersonFlags = useCallback((personId: string) => {
    return flags.filter(f => f.personId === personId);
  }, [flags]);

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞
  const getPersonComments = useCallback((personId: string) => {
    return comments.filter(c => c.personId === personId);
  }, [comments]);

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ª–µ–Ω—Ç—ã (–≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
  const Feed = () => (
    <div className="space-y-6">
      {/* –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã */}
      <div className="bg-white dark:bg-slate-800 rounded-lg shadow-md p-4">
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
          <div className="md:col-span-2">
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏, –≥–æ—Ä–æ–¥—É, –æ–ø–∏—Å–∞–Ω–∏—é..."
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              className="w-full px-4 py-2 border border-slate-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent dark:bg-slate-700 dark:text-white"
            />
          </div>
          <select
            value={filterLocation}
            onChange={(e) => setFilterLocation(e.target.value)}
            className="px-4 py-2 border border-slate-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-purple-500 dark:bg-slate-700 dark:text-white"
          >
            <option value="all">–í—Å–µ –≥–æ—Ä–æ–¥–∞</option>
            {locations.map(location => (
              <option key={location} value={location}>{location}</option>
            ))}
          </select>
          <select
            value={sortBy}
            onChange={(e) => setSortBy(e.target.value as any)}
            className="px-4 py-2 border border-slate-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-purple-500 dark:bg-slate-700 dark:text-white"
          >
            <option value="recent">–ù–µ–¥–∞–≤–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ</option>
            <option value="most_flags">–ë–æ–ª—å—à–µ —Ñ–ª–∞–≥–æ–≤</option>
            <option value="verified">–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ</option>
          </select>
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –ª—é–¥–µ–π */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {filteredPeople.map(person => {
          const personFlags = getPersonFlags(person.id);
          const redFlags = personFlags.filter(f => f.type === 'red');
          const greenFlags = personFlags.filter(f => f.type === 'green');
          const personComments = getPersonComments(person.id);
          const avgRating = personComments.length > 0 
            ? personComments.reduce((sum, c) => sum + c.rating, 0) / personComments.length 
            : 0;

          return (
            <div
              key={person.id}
              className="bg-white dark:bg-slate-800 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden cursor-pointer"
              onClick={() => {
                setSelectedPerson(person);
                setCurrentView('profile');
              }}
            >
              <div className="p-6">
                <div className="flex items-center justify-between mb-4">
                  <div className="flex items-center space-x-3">
                    <div className="text-4xl">{person.photos[0]}</div>
                    <div>
                      <div className="flex items-center space-x-2">
                        <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">
                          {person.name}
                        </h3>
                        {person.verified && (
                          <span className="text-blue-500" title="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å">‚úì</span>
                        )}
                      </div>
                      <p className="text-sm text-slate-600 dark:text-slate-400">
                        {person.age} –ª–µ—Ç ‚Ä¢ {person.location}
                      </p>
                    </div>
                  </div>
                  
                  {avgRating > 0 && (
                    <div className="text-right">
                      <div className="flex items-center space-x-1 text-yellow-600">
                        <span>‚≠ê</span>
                        <span className="font-medium">{avgRating.toFixed(1)}</span>
                      </div>
                      <div className="text-xs text-slate-500">
                        {personComments.length} –æ—Ç–∑—ã–≤{personComments.length === 1 ? '' : personComments.length < 5 ? '–∞' : '–æ–≤'}
                      </div>
                    </div>
                  )}
                </div>

                {person.bio && (
                  <p className="text-slate-600 dark:text-slate-400 text-sm mb-4 line-clamp-2">
                    {person.bio}
                  </p>
                )}

                {person.occupation && (
                  <p className="text-xs text-slate-500 mb-3">
                    üíº {person.occupation}
                  </p>
                )}

                {/* –§–ª–∞–≥–∏ */}
                <div className="flex justify-between items-center mb-4">
                  <div className="flex items-center space-x-4">
                    <div className="flex items-center space-x-1">
                      <span className="text-green-600">üü¢</span>
                      <span className="text-sm font-medium text-green-600">
                        {greenFlags.length}
                      </span>
                    </div>
                    <div className="flex items-center space-x-1">
                      <span className="text-red-600">üî¥</span>
                      <span className="text-sm font-medium text-red-600">
                        {redFlags.length}
                      </span>
                    </div>
                  </div>
                  
                  <div className="text-xs text-slate-500">
                    –î–æ–±–∞–≤–ª–µ–Ω {person.addedAt.toLocaleDateString()}
                  </div>
                </div>

                {/* –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ñ–ª–∞–≥ */}
                {personFlags.length > 0 && (
                  <div className="border-t border-slate-200 dark:border-slate-700 pt-3">
                    <div className="flex items-center space-x-2 mb-1">
                      <span className={personFlags[0].type === 'red' ? 'text-red-600' : 'text-green-600'}>
                        {personFlags[0].type === 'red' ? 'üî¥' : 'üü¢'}
                      </span>
                      <span className="text-xs font-medium text-slate-700 dark:text-slate-300">
                        {personFlags[0].category}
                      </span>
                    </div>
                    <p className="text-xs text-slate-600 dark:text-slate-400 line-clamp-2">
                      {personFlags[0].description}
                    </p>
                  </div>
                )}
              </div>
            </div>
          );
        })}
      </div>

      {filteredPeople.length === 0 && (
        <div className="bg-white dark:bg-slate-800 rounded-lg shadow-md p-8 text-center">
          <div className="text-4xl mb-4">üîç</div>
          <h3 className="text-xl font-bold text-slate-900 dark:text-slate-100 mb-2">
            –ù–∏–∫–æ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
          </h3>
          <p className="text-slate-600 dark:text-slate-400 mb-4">
            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞
          </p>
          <button
            onClick={() => setCurrentView('add-person')}
            className="bg-purple-600 hover:bg-purple-700 text-white px-6 py-2 rounded-lg font-medium"
          >
            –î–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞
          </button>
        </div>
      )}
    </div>
  );

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–æ—Ñ–∏–ª—è —á–µ–ª–æ–≤–µ–∫–∞
  const ProfileView = () => {
    if (!selectedPerson) return null;

    const personFlags = getPersonFlags(selectedPerson.id);
    const personComments = getPersonComments(selectedPerson.id);
    const redFlags = personFlags.filter(f => f.type === 'red');
    const greenFlags = personFlags.filter(f => f.type === 'green');
    
    const avgRating = personComments.length > 0 
      ? personComments.reduce((sum, c) => sum + c.rating, 0) / personComments.length 
      : 0;

    const [newFlag, setNewFlag] = useState({
      type: 'red' as 'red' | 'green',
      category: '',
      description: '',
      tags: [] as string[]
    });

    const [newComment, setNewComment] = useState({
      content: '',
      rating: 5 as 1 | 2 | 3 | 4 | 5,
      category: 'general' as 'dating' | 'friendship' | 'work' | 'general',
      anonymous: true
    });

    const handleAddFlag = (e: React.FormEvent) => {
      e.preventDefault();
      if (newFlag.category && newFlag.description) {
        addFlag(selectedPerson.id, newFlag);
        setNewFlag({
          type: 'red',
          category: '',
          description: '',
          tags: []
        });
        setShowAddFlag(false);
      }
    };

    const handleAddComment = (e: React.FormEvent) => {
      e.preventDefault();
      if (newComment.content) {
        addComment(selectedPerson.id, newComment);
        setNewComment({
          content: '',
          rating: 5,
          category: 'general',
          anonymous: true
        });
        setShowAddComment(false);
      }
    };

    return (
      <div className="space-y-6">
        {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
        <button
          onClick={() => setCurrentView('feed')}
          className="flex items-center space-x-2 text-slate-600 dark:text-slate-400 hover:text-slate-900 dark:hover:text-slate-100 transition-colors"
        >
          <span>‚Üê</span>
          <span>–ù–∞–∑–∞–¥ –∫ –ª–µ–Ω—Ç–µ</span>
        </button>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–µ–ª–æ–≤–µ–∫–µ */}
        <div className="bg-white dark:bg-slate-800 rounded-lg shadow-md p-6">
          <div className="flex items-start justify-between mb-6">
            <div className="flex items-center space-x-4">
              <div className="text-6xl">{selectedPerson.photos[0]}</div>
              <div>
                <div className="flex items-center space-x-2 mb-2">
                  <h1 className="text-2xl font-bold text-slate-900 dark:text-slate-100">
                    {selectedPerson.name}
                  </h1>
                  {selectedPerson.verified && (
                    <span className="text-blue-500 text-xl" title="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å">‚úì</span>
                  )}
                </div>
                <p className="text-slate-600 dark:text-slate-400 mb-1">
                  {selectedPerson.age} –ª–µ—Ç ‚Ä¢ {selectedPerson.location}
                </p>
                {selectedPerson.occupation && (
                  <p className="text-slate-600 dark:text-slate-400 mb-2">
                    üíº {selectedPerson.occupation}
                  </p>
                )}
                {selectedPerson.school && (
                  <p className="text-slate-600 dark:text-slate-400 mb-2">
                    üéì {selectedPerson.school}
                  </p>
                )}
                {avgRating > 0 && (
                  <div className="flex items-center space-x-2">
                    <div className="flex items-center space-x-1 text-yellow-600">
                      <span>‚≠ê</span>
                      <span className="font-medium">{avgRating.toFixed(1)}</span>
                    </div>
                    <span className="text-sm text-slate-500">
                      ({personComments.length} –æ—Ç–∑—ã–≤{personComments.length === 1 ? '' : personComments.length < 5 ? '–∞' : '–æ–≤'})
                    </span>
                  </div>
                )}
              </div>
            </div>

            <div className="text-right">
              <div className="flex items-center space-x-4 mb-2">
                <div className="text-center">
                  <div className="text-2xl font-bold text-green-600">{greenFlags.length}</div>
                  <div className="text-xs text-slate-500">üü¢ –ó–µ–ª–µ–Ω—ã–µ —Ñ–ª–∞–≥–∏</div>
                </div>
                <div className="text-center">
                  <div className="text-2xl font-bold text-red-600">{redFlags.length}</div>
                  <div className="text-xs text-slate-500">üî¥ –ö—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏</div>
                </div>
              </div>
              <p className="text-xs text-slate-500">
                –î–æ–±–∞–≤–ª–µ–Ω {selectedPerson.addedAt.toLocaleDateString()}
              </p>
            </div>
          </div>

          {selectedPerson.bio && (
            <div className="mb-6">
              <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100 mb-2">
                –û —Å–µ–±–µ
              </h3>
              <p className="text-slate-600 dark:text-slate-400">
                {selectedPerson.bio}
              </p>
            </div>
          )}

          {selectedPerson.socialMedia && (
            <div className="mb-6">
              <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100 mb-2">
                –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏
              </h3>
              <div className="flex space-x-4">
                {selectedPerson.socialMedia.instagram && (
                  <span className="text-sm text-slate-600 dark:text-slate-400">
                    üì∑ {selectedPerson.socialMedia.instagram}
                  </span>
                )}
                {selectedPerson.socialMedia.tiktok && (
                  <span className="text-sm text-slate-600 dark:text-slate-400">
                    üéµ {selectedPerson.socialMedia.tiktok}
                  </span>
                )}
                {selectedPerson.socialMedia.snapchat && (
                  <span className="text-sm text-slate-600 dark:text-slate-400">
                    üëª {selectedPerson.socialMedia.snapchat}
                  </span>
                )}
              </div>
            </div>
          )}

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="flex space-x-4">
            <button
              onClick={() => setShowAddFlag(true)}
              className="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg font-medium"
            >
              üè¥ –î–æ–±–∞–≤–∏—Ç—å —Ñ–ª–∞–≥
            </button>
            <button
              onClick={() => setShowAddComment(true)}
              className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium"
            >
              üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
            </button>
          </div>
        </div>

        {/* –§–ª–∞–≥–∏ */}
        {personFlags.length > 0 && (
          <div className="bg-white dark:bg-slate-800 rounded-lg shadow-md p-6">
            <h2 className="text-xl font-bold text-slate-900 dark:text-slate-100 mb-4">
              –§–ª–∞–≥–∏
            </h2>
            
            <div className="space-y-4">
              {personFlags.map(flag => (
                <div
                  key={flag.id}
                  className={`p-4 rounded-lg border ${
                    flag.type === 'red' 
                      ? 'border-red-200 dark:border-red-800 bg-red-50 dark:bg-red-900/20'
                      : 'border-green-200 dark:border-green-800 bg-green-50 dark:bg-green-900/20'
                  }`}
                >
                  <div className="flex items-start justify-between mb-2">
                    <div className="flex items-center space-x-2">
                      <span className={flag.type === 'red' ? 'text-red-600' : 'text-green-600'}>
                        {flag.type === 'red' ? 'üî¥' : 'üü¢'}
                      </span>
                      <span className={`font-medium ${
                        flag.type === 'red' 
                          ? 'text-red-800 dark:text-red-200' 
                          : 'text-green-800 dark:text-green-200'
                      }`}>
                        {flag.category}
                      </span>
                      {flag.verified && (
                        <span className="text-blue-500" title="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–ª–∞–≥">‚úì</span>
                      )}
                    </div>
                    
                    <div className="flex items-center space-x-2">
                      <button
                        onClick={() => voteOnFlag(flag.id, 'upvote')}
                        className="text-slate-500 hover:text-green-600"
                      >
                        üëç
                      </button>
                      <span className="text-sm font-medium">{flag.votes}</span>
                      <button
                        onClick={() => voteOnFlag(flag.id, 'downvote')}
                        className="text-slate-500 hover:text-red-600"
                      >
                        üëé
                      </button>
                    </div>
                  </div>
                  
                  <p className="text-slate-700 dark:text-slate-300 mb-2">
                    {flag.description}
                  </p>
                  
                  {flag.tags.length > 0 && (
                    <div className="flex flex-wrap gap-1 mb-2">
                      {flag.tags.map(tag => (
                        <span
                          key={tag}
                          className="px-2 py-1 bg-slate-200 dark:bg-slate-700 text-slate-700 dark:text-slate-300 rounded text-xs"
                        >
                          #{tag}
                        </span>
                      ))}
                    </div>
                  )}
                  
                  <p className="text-xs text-slate-500">
                    {flag.submittedAt.toLocaleDateString()} ‚Ä¢ –ê–Ω–æ–Ω–∏–º–Ω–æ
                  </p>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ */}
        {personComments.length > 0 && (
          <div className="bg-white dark:bg-slate-800 rounded-lg shadow-md p-6">
            <h2 className="text-xl font-bold text-slate-900 dark:text-slate-100 mb-4">
              –û—Ç–∑—ã–≤—ã
            </h2>
            
            <div className="space-y-4">
              {personComments.map(comment => (
                <div
                  key={comment.id}
                  className="p-4 border border-slate-200 dark:border-slate-700 rounded-lg"
                >
                  <div className="flex items-start justify-between mb-2">
                    <div className="flex items-center space-x-2">
                      <div className="flex items-center">
                        {[...Array(5)].map((_, i) => (
                          <span
                            key={i}
                            className={i < comment.rating ? 'text-yellow-400' : 'text-slate-300'}
                          >
                            ‚≠ê
                          </span>
                        ))}
                      </div>
                      <span className="px-2 py-1 bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300 rounded text-xs">
                        {comment.category}
                      </span>
                      {comment.verified && (
                        <span className="text-blue-500" title="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–∑—ã–≤">‚úì</span>
                      )}
                    </div>
                    
                    <button className="text-slate-500 hover:text-red-500">
                      ‚ù§Ô∏è {comment.likes}
                    </button>
                  </div>
                  
                  <p className="text-slate-700 dark:text-slate-300 mb-2">
                    {comment.content}
                  </p>
                  
                  <p className="text-xs text-slate-500">
                    {comment.submittedAt.toLocaleDateString()} ‚Ä¢ {comment.anonymous ? '–ê–Ω–æ–Ω–∏–º–Ω–æ' : '–û—Ç–∫—Ä—ã—Ç–æ'}
                  </p>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–ª–∞–≥–∞ */}
        {showAddFlag && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
            <div className="bg-white dark:bg-slate-800 rounded-lg shadow-xl max-w-lg w-full max-h-[90vh] overflow-y-auto">
              <div className="p-6">
                <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100 mb-4">
                  –î–æ–±–∞–≤–∏—Ç—å —Ñ–ª–∞–≥ –¥–ª—è {selectedPerson.name}
                </h3>
                
                <form onSubmit={handleAddFlag} className="space-y-4">
                  <div>
                    <label className="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">
                      –¢–∏–ø —Ñ–ª–∞–≥–∞
                    </label>
                    <div className="flex space-x-4">
                      <label className="flex items-center">
                        <input
                          type="radio"
                          value="red"
                          checked={newFlag.type === 'red'}
                          onChange={(e) => setNewFlag({...newFlag, type: e.target.value as 'red' | 'green'})}
                          className="mr-2"
                        />
                        <span className="text-red-600">üî¥ –ö—Ä–∞—Å–Ω—ã–π —Ñ–ª–∞–≥</span>
                      </label>
                      <label className="flex items-center">
                        <input
                          type="radio"
                          value="green"
                          checked={newFlag.type === 'green'}
                          onChange={(e) => setNewFlag({...newFlag, type: e.target.value as 'red' | 'green'})}
                          className="mr-2"
                        />
                        <span className="text-green-600">üü¢ –ó–µ–ª–µ–Ω—ã–π —Ñ–ª–∞–≥</span>
                      </label>
                    </div>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">
                      –ö–∞—Ç–µ–≥–æ—Ä–∏—è
                    </label>
                    <select
                      value={newFlag.category}
                      onChange={(e) => setNewFlag({...newFlag, category: e.target.value})}
                      required
                      className="w-full px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-purple-500 dark:bg-slate-700 dark:text-white"
                    >
                      <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                      {flagCategories[newFlag.type].map(category => (
                        <option key={category} value={category}>{category}</option>
                      ))}
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">
                      –û–ø–∏—Å–∞–Ω–∏–µ
                    </label>
                    <textarea
                      value={newFlag.description}
                      onChange={(e) => setNewFlag({...newFlag, description: e.target.value})}
                      required
                      rows={3}
                      placeholder="–û–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –ø–æ–¥—Ä–æ–±–Ω–µ–µ..."
                      className="w-full px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-purple-500 dark:bg-slate-700 dark:text-white resize-none"
                    />
                  </div>

                  <div className="flex space-x-4">
                    <button
                      type="submit"
                      className="flex-1 bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded-lg font-medium"
                    >
                      –î–æ–±–∞–≤–∏—Ç—å —Ñ–ª–∞–≥
                    </button>
                    <button
                      type="button"
                      onClick={() => setShowAddFlag(false)}
                      className="flex-1 bg-slate-600 hover:bg-slate-700 text-white py-2 px-4 rounded-lg font-medium"
                    >
                      –û—Ç–º–µ–Ω–∞
                    </button>
                  </div>
                </form>
              </div>
            </div>
          </div>
        )}

        {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è */}
        {showAddComment && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
            <div className="bg-white dark:bg-slate-800 rounded-lg shadow-xl max-w-lg w-full max-h-[90vh] overflow-y-auto">
              <div className="p-6">
                <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100 mb-4">
                  –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ {selectedPerson.name}
                </h3>
                
                <form onSubmit={handleAddComment} className="space-y-4">
                  <div>
                    <label className="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">
                      –û—Ü–µ–Ω–∫–∞
                    </label>
                    <div className="flex space-x-1">
                      {[1, 2, 3, 4, 5].map(rating => (
                        <button
                          key={rating}
                          type="button"
                          onClick={() => setNewComment({...newComment, rating: rating as any})}
                          className={`text-2xl ${rating <= newComment.rating ? 'text-yellow-400' : 'text-slate-300'}`}
                        >
                          ‚≠ê
                        </button>
                      ))}
                    </div>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">
                      –ö–∞—Ç–µ–≥–æ—Ä–∏—è
                    </label>
                    <select
                      value={newComment.category}
                      onChange={(e) => setNewComment({...newComment, category: e.target.value as any})}
                      className="w-full px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:bg-slate-700 dark:text-white"
                    >
                      <option value="general">–û–±—â–µ–µ</option>
                      <option value="dating">–û—Ç–Ω–æ—à–µ–Ω–∏—è</option>
                      <option value="friendship">–î—Ä—É–∂–±–∞</option>
                      <option value="work">–†–∞–±–æ—Ç–∞</option>
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">
                      –û—Ç–∑—ã–≤
                    </label>
                    <textarea
                      value={newComment.content}
                      onChange={(e) => setNewComment({...newComment, content: e.target.value})}
                      required
                      rows={4}
                      placeholder="–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –æ–ø—ã—Ç–æ–º –æ–±—â–µ–Ω–∏—è..."
                      className="w-full px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:bg-slate-700 dark:text-white resize-none"
                    />
                  </div>

                  <div>
                    <label className="flex items-center">
                      <input
                        type="checkbox"
                        checked={newComment.anonymous}
                        onChange={(e) => setNewComment({...newComment, anonymous: e.target.checked})}
                        className="mr-2"
                      />
                      <span className="text-sm text-slate-700 dark:text-slate-300">
                        –ê–Ω–æ–Ω–∏–º–Ω—ã–π –æ—Ç–∑—ã–≤
                      </span>
                    </label>
                  </div>

                  <div className="flex space-x-4">
                    <button
                      type="submit"
                      className="flex-1 bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg font-medium"
                    >
                      –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤
                    </button>
                    <button
                      type="button"
                      onClick={() => setShowAddComment(false)}
                      className="flex-1 bg-slate-600 hover:bg-slate-700 text-white py-2 px-4 rounded-lg font-medium"
                    >
                      –û—Ç–º–µ–Ω–∞
                    </button>
                  </div>
                </form>
              </div>
            </div>
          </div>
        )}
      </div>
    );
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞
  const AddPersonView = () => {
    const [newPerson, setNewPerson] = useState({
      name: '',
      age: 18,
      location: '',
      bio: '',
      photos: ['üë§'],
      school: '',
      occupation: '',
      socialMedia: {
        instagram: '',
        tiktok: '',
        snapchat: ''
      }
    });

    const handleSubmit = (e: React.FormEvent) => {
      e.preventDefault();
      if (newPerson.name && newPerson.location) {
        addPerson(newPerson);
        setNewPerson({
          name: '',
          age: 18,
          location: '',
          bio: '',
          photos: ['üë§'],
          school: '',
          occupation: '',
          socialMedia: {
            instagram: '',
            tiktok: '',
            snapchat: ''
          }
        });
        setCurrentView('feed');
      }
    };

    return (
      <div className="max-w-2xl mx-auto">
        <div className="bg-white dark:bg-slate-800 rounded-lg shadow-md p-6">
          <h2 className="text-2xl font-bold text-slate-900 dark:text-slate-100 mb-6">
            –î–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞
          </h2>

          <form onSubmit={handleSubmit} className="space-y-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">
                  –ò–º—è *
                </label>
                <input
                  type="text"
                  value={newPerson.name}
                  onChange={(e) => setNewPerson({...newPerson, name: e.target.value})}
                  required
                  className="w-full px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-purple-500 dark:bg-slate-700 dark:text-white"
                />
              </div>
              <div>
                <label className="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">
                  –í–æ–∑—Ä–∞—Å—Ç *
                </label>
                <input
                  type="number"
                  min="18"
                  max="99"
                  value={newPerson.age}
                  onChange={(e) => setNewPerson({...newPerson, age: parseInt(e.target.value) || 18})}
                  required
                  className="w-full px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-purple-500 dark:bg-slate-700 dark:text-white"
                />
              </div>
            </div>

            <div>
              <label className="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">
                –ì–æ—Ä–æ–¥ *
              </label>
              <input
                type="text"
                value={newPerson.location}
                onChange={(e) => setNewPerson({...newPerson, location: e.target.value})}
                required
                className="w-full px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-purple-500 dark:bg-slate-700 dark:text-white"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">
                –û–ø–∏—Å–∞–Ω–∏–µ
              </label>
              <textarea
                value={newPerson.bio}
                onChange={(e) => setNewPerson({...newPerson, bio: e.target.value})}
                rows={3}
                placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ..."
                className="w-full px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-purple-500 dark:bg-slate-700 dark:text-white resize-none"
              />
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">
                  –£—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ
                </label>
                <input
                  type="text"
                  value={newPerson.school}
                  onChange={(e) => setNewPerson({...newPerson, school: e.target.value})}
                  className="w-full px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-purple-500 dark:bg-slate-700 dark:text-white"
                />
              </div>
              <div>
                <label className="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">
                  –ü—Ä–æ—Ñ–µ—Å—Å–∏—è
                </label>
                <input
                  type="text"
                  value={newPerson.occupation}
                  onChange={(e) => setNewPerson({...newPerson, occupation: e.target.value})}
                  className="w-full px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-purple-500 dark:bg-slate-700 dark:text-white"
                />
              </div>
            </div>

            <div>
              <h3 className="text-lg font-medium text-slate-700 dark:text-slate-300 mb-3">
                –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏
              </h3>
              <div className="space-y-3">
                <input
                  type="text"
                  placeholder="Instagram username"
                  value={newPerson.socialMedia.instagram}
                  onChange={(e) => setNewPerson({
                    ...newPerson,
                    socialMedia: {...newPerson.socialMedia, instagram: e.target.value}
                  })}
                  className="w-full px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-purple-500 dark:bg-slate-700 dark:text-white"
                />
                <input
                  type="text"
                  placeholder="TikTok username"
                  value={newPerson.socialMedia.tiktok}
                  onChange={(e) => setNewPerson({
                    ...newPerson,
                    socialMedia: {...newPerson.socialMedia, tiktok: e.target.value}
                  })}
                  className="w-full px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-purple-500 dark:bg-slate-700 dark:text-white"
                />
              </div>
            </div>

            <div className="flex space-x-4">
              <button
                type="submit"
                className="flex-1 bg-purple-600 hover:bg-purple-700 text-white py-3 px-6 rounded-lg font-medium"
              >
                –î–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞
              </button>
              <button
                type="button"
                onClick={() => setCurrentView('feed')}
                className="flex-1 bg-slate-600 hover:bg-slate-700 text-white py-3 px-6 rounded-lg font-medium"
              >
                –û—Ç–º–µ–Ω–∞
              </button>
            </div>
          </form>
        </div>
      </div>
    );
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∞–≤–∏–ª –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  const GuidelinesView = () => (
    <div className="max-w-4xl mx-auto space-y-6">
      <div className="bg-white dark:bg-slate-800 rounded-lg shadow-md p-6">
        <h2 className="text-2xl font-bold text-slate-900 dark:text-slate-100 mb-6">
          üìã –ü—Ä–∞–≤–∏–ª–∞ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
        </h2>

        <div className="space-y-6">
          <div>
            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100 mb-3">
              üî¥ –ö—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏ - —á—Ç–æ —ç—Ç–æ?
            </h3>
            <p className="text-slate-600 dark:text-slate-400 mb-3">
              –ö—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏ - —ç—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é—â–∏–µ –∑–Ω–∞–∫–∏ –æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –ø—Ä–æ–±–ª–µ–º–Ω–æ–º –ø–æ–≤–µ–¥–µ–Ω–∏–∏ —á–µ–ª–æ–≤–µ–∫–∞. 
              –û–Ω–∏ –ø–æ–º–æ–≥–∞—é—Ç –¥—Ä—É–≥–∏–º –ª—é–¥—è–º –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏.
            </p>
            <ul className="list-disc list-inside text-slate-600 dark:text-slate-400 space-y-1">
              <li>–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –∏–ª–∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—â–µ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ</li>
              <li>–ù–µ—É–≤–∞–∂–µ–Ω–∏–µ –∫ –≥—Ä–∞–Ω–∏—Ü–∞–º –¥—Ä—É–≥–∏—Ö –ª—é–¥–µ–π</li>
              <li>–õ–æ–∂—å –∏ –æ–±–º–∞–Ω</li>
              <li>–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏–ª–∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è</li>
              <li>–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –≤–ª–∏—è—é—â–∏–µ –Ω–∞ –ø–æ–≤–µ–¥–µ–Ω–∏–µ</li>
            </ul>
          </div>

          <div>
            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100 mb-3">
              üü¢ –ó–µ–ª–µ–Ω—ã–µ —Ñ–ª–∞–≥–∏ - —Ö–æ—Ä–æ—à–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞
            </h3>
            <p className="text-slate-600 dark:text-slate-400 mb-3">
              –ó–µ–ª–µ–Ω—ã–µ —Ñ–ª–∞–≥–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –∑–¥–æ—Ä–æ–≤–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ–∫–∞.
            </p>
            <ul className="list-disc list-inside text-slate-600 dark:text-slate-400 space-y-1">
              <li>–£–≤–∞–∂–µ–Ω–∏–µ –∫ –≥—Ä–∞–Ω–∏—Ü–∞–º –∏ —Å–æ–≥–ª–∞—Å–∏—é</li>
              <li>–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∑—Ä–µ–ª–æ—Å—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞</li>
              <li>–ß–µ—Å—Ç–Ω–æ—Å—Ç—å –≤ –æ–±—â–µ–Ω–∏–∏</li>
              <li>–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å</li>
              <li>–î–æ–±—Ä–æ—Ç–∞ –∏ —ç–º–ø–∞—Ç–∏—è</li>
            </ul>
          </div>

          <div className="bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-4">
            <h3 className="text-lg font-semibold text-yellow-800 dark:text-yellow-200 mb-3">
              ‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞
            </h3>
            <ul className="list-disc list-inside text-yellow-700 dark:text-yellow-300 space-y-1">
              <li>–î–æ–±–∞–≤–ª—è–π—Ç–µ —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é</li>
              <li>–ù–µ –ø—É–±–ª–∏–∫—É–π—Ç–µ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤, –∞–¥—Ä–µ—Å–∞)</li>
              <li>–£–≤–∞–∂–∞–π—Ç–µ –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</li>
              <li>–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –º–µ—Å—Ç–∏ –∏–ª–∏ –∫–ª–µ–≤–µ—Ç—ã</li>
              <li>–°–æ–æ–±—â–∞–π—Ç–µ –æ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è—Ö –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º</li>
            </ul>
          </div>

          <div className="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4">
            <h3 className="text-lg font-semibold text-blue-800 dark:text-blue-200 mb-3">
              üõ°Ô∏è –ó–∞—â–∏—Ç–∞ –æ—Ç –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–π
            </h3>
            <ul className="list-disc list-inside text-blue-700 dark:text-blue-300 space-y-1">
              <li>–°–∏—Å—Ç–µ–º–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –ø–æ–º–æ–≥–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –Ω–µ–¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é</li>
              <li>–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–≤—ã—à–∞–µ—Ç –¥–æ–≤–µ—Ä–∏–µ –∫ –¥–∞–Ω–Ω—ã–º</li>
              <li>–ú–æ–¥–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è</li>
              <li>–ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –∑–∞—â–∏—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ç –ø—Ä–µ—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</li>
              <li>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–±–∂–∞–ª–æ–≤–∞–Ω–∏—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Ñ–ª–∞–≥–æ–≤</li>
            </ul>
          </div>

          <div className="bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-4">
            <h3 className="text-lg font-semibold text-green-800 dark:text-green-200 mb-3">
              üí° –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
            </h3>
            <ol className="list-decimal list-inside text-green-700 dark:text-green-300 space-y-1">
              <li>–ò—â–∏—Ç–µ —á–µ–ª–æ–≤–µ–∫–∞ —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫ –∏–ª–∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –ª–µ–Ω—Ç—É</li>
              <li>–ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ - –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å</li>
              <li>–î–æ–±–∞–≤–ª—è–π—Ç–µ —Ñ–ª–∞–≥–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ª–∏—á–Ω–æ–≥–æ –æ–ø—ã—Ç–∞</li>
              <li>–ì–æ–ª–æ—Å—É–π—Ç–µ –∑–∞ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã–µ —Ñ–ª–∞–≥–∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</li>
              <li>–û—Å—Ç–∞–≤–ª—è–π—Ç–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–µ –æ—Ç–∑—ã–≤—ã –æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏</li>
            </ol>
          </div>
        </div>
      </div>
    </div>
  );

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 dark:from-slate-900 dark:to-slate-800">
      <div className="container mx-auto px-4 py-8 max-w-6xl">
        {/* Header */}
        <div className="flex items-center justify-between mb-8">
          <div>
            <h1 className="text-4xl font-bold text-slate-900 dark:text-slate-100 mb-2">
              üîç FlagSpotter
            </h1>
            <p className="text-lg text-slate-600 dark:text-slate-400">
              –ê–Ω–æ–Ω–∏–º–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –æ–±–º–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ª—é–¥—è—Ö
            </p>
          </div>
          
          <Link 
            href="/"
            className="bg-slate-900 dark:bg-slate-100 text-white dark:text-slate-900 px-6 py-2 rounded-lg font-medium hover:bg-slate-800 dark:hover:bg-slate-200 transition-colors"
          >
            ‚Üê –ù–∞ –≥–ª–∞–≤–Ω—É—é
          </Link>
        </div>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
        <div className="bg-white dark:bg-slate-800 rounded-lg shadow-md p-4 mb-8">
          <div className="flex flex-wrap gap-2">
            <button
              onClick={() => setCurrentView('feed')}
              className={`px-4 py-2 rounded-lg font-medium transition-colors ${
                currentView === 'feed'
                  ? 'bg-purple-600 text-white'
                  : 'bg-slate-200 dark:bg-slate-700 text-slate-700 dark:text-slate-300 hover:bg-slate-300 dark:hover:bg-slate-600'
              }`}
            >
              üè† –õ–µ–Ω—Ç–∞
            </button>
            <button
              onClick={() => setCurrentView('add-person')}
              className={`px-4 py-2 rounded-lg font-medium transition-colors ${
                currentView === 'add-person'
                  ? 'bg-purple-600 text-white'
                  : 'bg-slate-200 dark:bg-slate-700 text-slate-700 dark:text-slate-300 hover:bg-slate-300 dark:hover:bg-slate-600'
              }`}
            >
              ‚ûï –î–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞
            </button>
            <button
              onClick={() => setCurrentView('guidelines')}
              className={`px-4 py-2 rounded-lg font-medium transition-colors ${
                currentView === 'guidelines'
                  ? 'bg-purple-600 text-white'
                  : 'bg-slate-200 dark:bg-slate-700 text-slate-700 dark:text-slate-300 hover:bg-slate-300 dark:hover:bg-slate-600'
              }`}
            >
              üìã –ü—Ä–∞–≤–∏–ª–∞
            </button>
          </div>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        {currentView === 'feed' && <Feed />}
        {currentView === 'add-person' && <AddPersonView />}
        {currentView === 'profile' && <ProfileView />}
        {currentView === 'guidelines' && <GuidelinesView />}

        {/* Footer */}
        <footer className="mt-12 text-center">
          <p className="text-slate-500 dark:text-slate-500 text-sm">
            üîç –ê–Ω–æ–Ω–∏–º–Ω–æ, –±–µ–∑–æ–ø–∞—Å–Ω–æ, –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ
          </p>
        </footer>
      </div>
    </div>
  );
}
